<?xml version="1.0" encoding="utf-8"?>
<project name="squil" default="test" basedir=".">
    <property environment="env"/>
    <property name="src" location="src"/>
    <property name="classes" location="classes"/>
    <property name="cobertura-classes" location="cobertura-classes"/>

    <property name="test-src" location="test"/>
    <property name="test-classes" location="test-classes"/>
    <property name="test-results" location="test-results"/>

    <property name="config" location="config"/>
    <property name="lib" location="lib"/>
    <property name="logs" location="logs"/>
    <property name="api-docs" location="apidoc"/>

    <property name="debug" value="on"/>

    <path id="cobertura.classpath">
        <fileset dir="${lib}/cobertura">
            <include name="*.jar"/>
        </fileset>
        <fileset dir="${lib}">
            <include name="log4j-1.2.14.jar"/>
        </fileset>
    </path>

    <path id="compile.classpath">
        <pathelement location="${classes}"/>
        <fileset dir="${lib}">
            <include name="*.jar"/>
        </fileset>
    </path>

    <path id="test.classpath">
        <!--
              Note the classpath order: instrumented classes are before the
              original (uninstrumented) classes.  This is important.
          -->
        <pathelement location="${cobertura-classes}"/>
        <pathelement location="${classes}"/>
        <pathelement location="${test-classes}"/>
        <fileset dir="${lib}">
            <include name="*.jar"/>
        </fileset>
        <pathelement location="${basedir}"/>
        <path refid="cobertura.classpath"/>
    </path>

    <!-- checkstyle source code analyzer task -->
    <taskdef resource="checkstyletask.properties" onerror="report">
        <classpath>
            <pathelement location="${lib}/checkstyle/checkstyle-all-4.3.jar"/>
        </classpath>
    </taskdef>

    <!-- See http://pmd.sourceforge.net/ -->
    <path id="pmd.path">
        <fileset dir="${lib}/pmd">
            <include name="*.jar"/>
        </fileset>
    </path>

    <taskdef name="pmd" classname="net.sourceforge.pmd.ant.PMDTask"
             classpathref="pmd.path"/>

    <taskdef name="cpd" classname="net.sourceforge.pmd.cpd.CPDTask"
             classpathref="pmd.path"/>

    <!-- See http://cobertura.sourceforge.net/ -->
    <taskdef classpathref="cobertura.classpath" resource="tasks.properties"/>

    <target name="init">
        <!--  Create the time stamp -->
        <tstamp/>
        <!--  Create the classes directory -->
        <mkdir dir="${classes}"/>
        <mkdir dir="${test-classes}"/>
        <mkdir dir="${test-results}"/>
        <mkdir dir="${logs}"/>
    </target>

    <target name="compile" description="Compile Source code" depends="init">
        <javac srcdir="${src}" destdir="${classes}" debug="${debug}" deprecation="true" source="1.5">
            <classpath refid="compile.classpath"/>
        </javac>
    </target>

    <target name="compile-tests" depends="compile" description="Compiles the test classes">
        <javac srcdir="${test-src}" destdir="${test-classes}" debug="${debug}" deprecation="true" source="1.5">
            <classpath refid="compile.classpath"/>
        </javac>
    </target>

    <target name="test" depends="compile-tests, cobertura-instrument" description="Run Junit tests">
        <junit dir="${basedir}" fork="true" printsummary="yes" haltonfailure="yes" haltonerror="yes" showoutput="yes">
            <sysproperty key="net.sourceforge.cobertura.datafile"
                         file="${basedir}/cobertura.ser"/>
            <classpath refid="test.classpath"/>

            <batchtest fork="yes" haltonfailure="no" haltonerror="no"
                       failureproperty="test-failure" errorproperty="test-error"
                       todir="test-results">
                <formatter type="plain" usefile="false"/>
                <formatter type="plain"/>
                <formatter type="xml"/>
                <fileset dir="test">
                    <include name="**/Test*"/>
                </fileset>
            </batchtest>
        </junit>
        <junitreport todir="${logs}">
            <fileset dir="${test-results}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${test-results}/html/junit"/>
        </junitreport>
        <condition property="tests-failed">
            <or>
                <isset property="test-error"/>
                <isset property="test-failure"/>
            </or>
        </condition>
        <fail message="One or more of the tests failed" if="tests-failed"/>
    </target>

    <target name="clean" description="Clean up directories">
        <!--  Delete the classes Directory -->
        <delete dir="${classes}"/>
        <delete dir="${test-classes}"/>
        <delete dir="${test-results}"/>
        <delete dir="${api-docs}"/>
        <delete dir="${cobertura-classes}"/>
        <delete dir="cobertura.ser"/>
        <delete dir="${logs}"/>
    </target>

    <target name="cruisecontrol"
            depends="clean, cobertura-setup, findbugs, checkstyle, test, javadocs, pmd, cpd, cobertura-report"
            description="Run CruiseControl Build and Tests"/>

    <target name="checkstyle" depends="init" description="Checks source against coding standards">
        <checkstyle config="${config}/squil_checks.xml" failonviolation="no">
            <fileset dir="${src}">
                <include name="**/*.java"/>
            </fileset>
            <classpath refid="compile.classpath"/>
            <formatter type="xml" toFile="${test-results}/checkstyle_errors.xml"/>
            <formatter type="plain"/>
        </checkstyle>

        <xslt in="${test-results}/checkstyle_errors.xml" out="${test-results}/html/checkstyle/index.html"
              style="${config}/checkstyle.xsl"/>
    </target>

    <target name="pmd" depends="init" description="Scan Java source code and look for potential problems">
        <pmd targetjdk="1.5" failonerror="true" failurespropertyname="pmderrors" shortfilenames="true">
            <fileset dir="${src}">
                <include name="**/*.java"/>
            </fileset>
            <ruleset>basic</ruleset>
            <ruleset>braces</ruleset>
            <ruleset>clone</ruleset>
            <ruleset>finalizers</ruleset>
            <ruleset>imports</ruleset>
            <ruleset>logging-jakarta-commons</ruleset>
            <ruleset>j2ee</ruleset>
            <ruleset>migrating</ruleset>
            <ruleset>strictexception</ruleset>
            <ruleset>strings</ruleset>
            <ruleset>sunsecure</ruleset>
            <ruleset>unusedcode</ruleset>
            <!--
                        <ruleset>codesize</ruleset>
                        <ruleset>controversial</ruleset>
                        <ruleset>coupling</ruleset>
                        <ruleset>design</ruleset>
                        <ruleset>javabeans</ruleset>
			            <ruleset>junit</ruleset>
                        <ruleset>naming</ruleset>
                        <ruleset>optimizations</ruleset>
            -->
            <formatter type="xml" toFile="${test-results}/pmd-report.xml"/>
        </pmd>
        <xslt in="${test-results}/pmd-report.xml" style="${config}/pmd-report-per-class.xslt"
              out="${test-results}/html/pmd/index.html"/>
    </target>

    <target name="cpd" depends="init" description="Scan Java source code and look for potential duplication">
        <cpd minimumTokenCount="50" outputFile="${test-results}/cpd-report.xml" format="xml">
            <fileset dir="${src}">
                <include name="**/*.java"/>
            </fileset>
        </cpd>
        <xslt in="${test-results}/cpd-report.xml" style="${config}/cpdhtml.xslt"
              out="${test-results}/html/cpd/index.html"/>
    </target>

    <target name="cobertura-setup">
        <mkdir dir="${cobertura-classes}"/>
        <property name="with-cobertura" value="true"/>
    </target>

    <target name="cobertura-instrument" if="with-cobertura">
        <delete file="cobertura.ser"/>

        <cobertura-instrument todir="${cobertura-classes}">
            <fileset dir="${classes}">
                <include name="**/*.class"/>
            </fileset>
        </cobertura-instrument>
    </target>

    <target name="cobertura-report">
        <cobertura-report format="html" destdir="${test-results}/html/cobertura">
            <fileset dir="${src}"/>
        </cobertura-report>
    </target>

    <!-- See http://findbugs.sourceforge.net/ -->
    <target name="findbugs" depends="compile" description="Run findbugs on source code">
        <taskdef name="findbugs"
                 classname="edu.umd.cs.findbugs.anttask.FindBugsTask">
            <classpath>
                <fileset dir="${lib}/findbugs">
                    <include name="*.jar"/>
                </fileset>
            </classpath>
        </taskdef>

        <findbugs
                jvmargs="-Xmx999m" output="xml:withMessages"
                outputfile="${test-results}/findbugs.xml"
                pluginList="${lib}/findbugs/plugin/coreplugin.jar">
            <auxClasspath refid="compile.classpath"/>
            <sourcePath path="${src}"/>
            <classpath>
                <fileset dir="${lib}/findbugs">
                    <include name="*.jar"/>
                </fileset>
            </classpath>
            <class location="${classes}"/>
        </findbugs>
        <xslt in="${test-results}/findbugs.xml" style="${config}/findbugs-fancy.xsl"
              out="${test-results}/html/findbugs/index.html"/>
    </target>

    <!-- See http://www.clarkware.com/software/JDepend.html -->
    <target name="jdepend">
        <jdepend format="xml" outputfile="${test-results}/jdepend-report.xml"
                 classpathref="compile.classpath">
            <sourcespath>
                <pathelement location="src"/>
            </sourcespath>
            <classespath>
                <pathelement location="${classes}"/>
            </classespath>
        </jdepend>

        <xslt basedir="${test-results}" destdir="${test-results}/html/jdepend"
              includes="jdepend-report.xml"
              style="${ant.home}/etc/jdepend.xsl" />
    </target>

    <target name="javadocs" description="Run Javadoc on all source code files">
        <!--  Create the Java doc directory -->
        <mkdir dir="${api-docs}"/>
        <javadoc sourcepath="${src}" destdir="${api-docs}" use="true"
                 author="true" version="true" windowtitle="Squil JavaDoc API"
                 header="Squil" packagenames="edu.cornell.med.icb.*"
                 maxmemory="990m">
            <!-- TODO: add jdo extension source -->
            <link href="http://java.sun.com/j2se/1.5.0/docs/api/"/>
            <link href="http://mg4j.dsi.unimi.it/docs/"/>
            <link href="http://fastutil.dsi.unimi.it/docs/"/>
            <classpath refid="compile.classpath"/>
            <bottom>
                <![CDATA[<i>Copyright &#169; 2007 Institute for Computational Biomedicine, All Rights Reserved.</i>]]></bottom>
        </javadoc>
    </target>

</project>
